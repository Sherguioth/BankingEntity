
package webservices;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "ProductWebServiceSW", targetNamespace = "http://webServices/",
                  wsdlLocation =
                  "http://localhost:7101/ServerBankSW/ProductWebServicePort?WSDL#%7Bhttp%3A%2F%2FwebServices%2F%7DProductWebServiceSW")
public class ProductWebServiceSW extends Service {

    private final static URL PRODUCTWEBSERVICESW_WSDL_LOCATION;
    private final static WebServiceException PRODUCTWEBSERVICESW_EXCEPTION;
    private final static QName PRODUCTWEBSERVICESW_QNAME = new QName("http://webServices/", "ProductWebServiceSW");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("http://localhost:7101/ServerBankSW/ProductWebServicePort?WSDL#%7Bhttp%3A%2F%2FwebServices%2F%7DProductWebServiceSW");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PRODUCTWEBSERVICESW_WSDL_LOCATION = url;
        PRODUCTWEBSERVICESW_EXCEPTION = e;
    }

    public ProductWebServiceSW() {
        super(__getWsdlLocation(), PRODUCTWEBSERVICESW_QNAME);
    }

    public ProductWebServiceSW(WebServiceFeature... features) {
        super(__getWsdlLocation(), PRODUCTWEBSERVICESW_QNAME, features);
    }

    public ProductWebServiceSW(URL wsdlLocation) {
        super(wsdlLocation, PRODUCTWEBSERVICESW_QNAME);
    }

    public ProductWebServiceSW(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PRODUCTWEBSERVICESW_QNAME, features);
    }

    public ProductWebServiceSW(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ProductWebServiceSW(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ProductWebService
     */
    @WebEndpoint(name = "ProductWebServicePort")
    public ProductWebService getProductWebServicePort() {
        return super.getPort(new QName("http://webServices/", "ProductWebServicePort"), ProductWebService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ProductWebService
     */
    @WebEndpoint(name = "ProductWebServicePort")
    public ProductWebService getProductWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webServices/", "ProductWebServicePort"), ProductWebService.class,
                             features);
    }

    private static URL __getWsdlLocation() {
        if (PRODUCTWEBSERVICESW_EXCEPTION != null) {
            throw PRODUCTWEBSERVICESW_EXCEPTION;
        }
        return PRODUCTWEBSERVICESW_WSDL_LOCATION;
    }

}
