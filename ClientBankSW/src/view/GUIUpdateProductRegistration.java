/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JDialog;

import controller.ClientController;
import controller.ProductController;
import controller.ProductRegistrationController;

import java.util.Date;

import javax.swing.JOptionPane;

import webservices.Client;
import webservices.Product;
import webservices.ProductRegistration;

/**
 *
 * @author Sherg
 */
public class GUIUpdateProductRegistration extends javax.swing.JFrame implements ILoadModalData {

    private final ClientController clientController;
    private final ProductController productController;
    private final ProductRegistrationController productRegistrationController;

    private JDialog modal;

    private Client client;
    private Product product;

    /**
     * Creates new form GUIUpdateREg
     */
    public GUIUpdateProductRegistration(ClientController pClientController, ProductController pProductController,
                                        ProductRegistrationController pProductRegistrationController) {
        initComponents();

        this.clientController = pClientController;
        this.productController = pProductController;
        this.productRegistrationController = pProductRegistrationController;

        this.client = null;
        this.product = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        txtIdClient = new javax.swing.JTextField();
        labProductNumber = new javax.swing.JLabel();
        labState = new javax.swing.JLabel();
        labExpirationDate = new javax.swing.JLabel();
        txtProductNumber = new javax.swing.JTextField();
        labTitle = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        labIdClient = new javax.swing.JLabel();
        radBtnActivo = new javax.swing.JRadioButton();
        btnFindClient = new javax.swing.JButton();
        dateReg = new com.toedter.calendar.JDateChooser();
        radBtnInactivo = new javax.swing.JRadioButton();
        labProductCode = new javax.swing.JLabel();
        dateExp = new com.toedter.calendar.JDateChooser();
        jComboBoxProductCode = new javax.swing.JComboBox<String>();
        labRegistrrionDate = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        labBalance = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actualizar Registro");

        labProductNumber.setText("Número de producto:");

        labState.setText("Estado:");

        labExpirationDate.setText("Fecha de vencimiento:");

        labTitle.setFont(new java.awt.Font("Lucida Calligraphy", 0, 24)); // NOI18N
        labTitle.setText("Actualizar Registro");
        labTitle.setToolTipText("");

        labIdClient.setText("Documento del Cliente:");

        radBtnActivo.setSelected(true);
        radBtnActivo.setText("Avtivo");
        radBtnActivo.setToolTipText("");
        radBtnActivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radBtnActivoMouseClicked(evt);
            }
        });
        radBtnActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBtnActivoActionPerformed(evt);
            }
        });

        btnFindClient.setText("...");
        btnFindClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindClientActionPerformed(evt);
            }
        });

        radBtnInactivo.setText("Inactivo");
        radBtnInactivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radBtnInactivoMouseClicked(evt);
            }
        });
        radBtnInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBtnInactivoActionPerformed(evt);
            }
        });

        labProductCode.setText("Producto:");
        labProductCode.setToolTipText("");

        labRegistrrionDate.setText("Fecha de expedición:");

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        labBalance.setText("Saldo:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labIdClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labProductCode)
                    .addComponent(labProductNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labRegistrrionDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labExpirationDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProductNumber)
                    .addComponent(txtBalance)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFindClient, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radBtnActivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radBtnInactivo)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(dateReg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(labTitle)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(labTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labIdClient)
                    .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labProductCode)
                    .addComponent(jComboBoxProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtProductNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labProductNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBalance)
                    .addComponent(labBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labRegistrrionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labExpirationDate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labState, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radBtnActivo)
                        .addComponent(radBtnInactivo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }//GEN-END:initComponents

    private void btnFindClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindClientActionPerformed
        GUIPanelModalListClients panel = new GUIPanelModalListClients(this, this.clientController);
        modal = new JDialog(this, "Clientes", true);
        modal.getContentPane().add(panel);
        modal.pack();
        modal.setLocationRelativeTo(null);
        modal.setVisible(true);
    }//GEN-LAST:event_btnFindClientActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int idClient = Integer.parseInt(txtIdClient.getText());
        List<Product> productList = null;

        String strProductCode = jComboBoxProductCode.getSelectedItem().toString();
        String strProductNumber = txtProductNumber.getText();
        String strBalance = txtBalance.getText();
        Date registrationDate = dateReg.getDate();
        Date expirationDate = dateExp.getDate();
        boolean state = radBtnActivo.isSelected();

        try {
            boolean update =
                this.productRegistrationController.updateProductRegistrationint(idClient, strProductCode,
                                                                                strProductNumber, strBalance,
                                                                                registrationDate, expirationDate,
                                                                                state);

            if (update) {
                JOptionPane.showMessageDialog(this, "EL registro ha sido Actualizdo.", "Confirmación",
                                              JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se ha podido actualizar el registro del producto.", "Error",
                                              JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String strProductCode = (String) jComboBoxProductCode.getSelectedItem();

        try {
            ProductRegistration productRegistrartion =
                this.productRegistrationController.findProductRegistration(client.getIdentificationNumber(),
                                                                           strProductCode);

            txtProductNumber.setText(String.valueOf(productRegistrartion.getProductNumber()));
            txtBalance.setText(String.valueOf(productRegistrartion.getBalance()));

            java.sql.Date registrationDate =
                new java.sql.Date(productRegistrartion.getRegistratioDate().toGregorianCalendar().getTime().getTime());
            dateReg.setDate(registrationDate);
            java.sql.Date expirationDate =
                new java.sql.Date(productRegistrartion.getExpirationDate().toGregorianCalendar().getTime().getTime());
            dateExp.setDate(expirationDate);

            if (productRegistrartion.isState()) {
                radBtnActivo.setSelected(true);
            } else {
                radBtnInactivo.setSelected(true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void radBtnInactivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radBtnInactivoMouseClicked

    }//GEN-LAST:event_radBtnInactivoMouseClicked

    private void radBtnActivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radBtnActivoMouseClicked
        
    }//GEN-LAST:event_radBtnActivoMouseClicked

    private void radBtnActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBtnActivoActionPerformed
        radBtnInactivo.setSelected(false);
        radBtnActivo.setSelected(true);
    }//GEN-LAST:event_radBtnActivoActionPerformed

    private void radBtnInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBtnInactivoActionPerformed
        radBtnActivo.setSelected(false);
        radBtnInactivo.setSelected(true);
    }//GEN-LAST:event_radBtnInactivoActionPerformed

    public void loadProducts() {
        jComboBoxProductCode.removeAllItems();

        List<ProductRegistration> allProductRegistrations =
            this.productRegistrationController.listAllProductRegistrations();
        List<ProductRegistration> clientProductRegistrations = new ArrayList<>();

        for (ProductRegistration productRegistration : allProductRegistrations) {
            if (productRegistration.getClientId() == client.getIdentificationNumber()) {
                clientProductRegistrations.add(productRegistration);
            }
        }

        jComboBoxProductCode.addItem("");
        for (ProductRegistration clientProductRegistration : clientProductRegistrations) {
            try {
                Product product = this.productController.findProductById(clientProductRegistration.getProductCode());
                jComboBoxProductCode.addItem(String.valueOf(product.getCode()));
            } catch (Exception ex) {
                Logger.getLogger(GUIFindProductRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void loadModalData(String data) {
        txtIdClient.setText(data);
        modal.dispose();
        txtIdClient.setEditable(false);

        try {
            client = clientController.findClientById(data);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        loadProducts();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnFindClient;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dateExp;
    private com.toedter.calendar.JDateChooser dateReg;
    private javax.swing.JComboBox<String> jComboBoxProductCode;
    private javax.swing.JLabel labBalance;
    private javax.swing.JLabel labExpirationDate;
    private javax.swing.JLabel labIdClient;
    private javax.swing.JLabel labProductCode;
    private javax.swing.JLabel labProductNumber;
    private javax.swing.JLabel labRegistrrionDate;
    private javax.swing.JLabel labState;
    private javax.swing.JLabel labTitle;
    private javax.swing.JRadioButton radBtnActivo;
    private javax.swing.JRadioButton radBtnInactivo;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtIdClient;
    private javax.swing.JTextField txtProductNumber;
    // End of variables declaration//GEN-END:variables

}
