/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ClientController;
import controller.ProductController;
import controller.ProductRegistrationController;

import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JDialog;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

import webservices.Client;
import webservices.Product;
import webservices.ProductRegistration;

/**
 *
 * @author Sherg
 */
public class GUIListProductRegistrationsByClient extends javax.swing.JFrame implements ILoadModalData {

    private final ClientController clientController;
    private final ProductController productController;
    private final ProductRegistrationController productRegistrationController;

    private JDialog modal;

    private Client client;

    /**
     * Creates new form GUIListProducts
     *
     * @param pClientService
     * @param pProductService
     * @param pRegistrationProductService
     */
    public GUIListProductRegistrationsByClient(ClientController pClientController, ProductController pProductController,
                                               ProductRegistrationController pProductRegistrationController) {
        initComponents();

        this.clientController = pClientController;
        this.productController = pProductController;
        this.productRegistrationController = pProductRegistrationController;

        this.client = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel1 = new javax.swing.JPanel();
        labIdClient = new javax.swing.JLabel();
        txtIdClient = new javax.swing.JTextField();
        btnFindClient = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientProductRegistrations = new javax.swing.JTable();
        btnRefreshData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registros");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registros"));

        labIdClient.setText("Documento del Cliente:");

        btnFindClient.setText("...");
        btnFindClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindClientActionPerformed(evt);
            }
        });

        tableClientProductRegistrations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo del producto", "Producto", "Número de producto", "Saldo", "Fecha de registro", "Fecha de expiración", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableClientProductRegistrations);
        tableClientProductRegistrations.getColumnModel().getColumn(0).setHeaderValue("Codigo del producto");
        tableClientProductRegistrations.getColumnModel().getColumn(1).setHeaderValue("Producto");
        tableClientProductRegistrations.getColumnModel().getColumn(2).setHeaderValue("Fecha de registro");
        tableClientProductRegistrations.getColumnModel().getColumn(3).setHeaderValue("Saldo");
        tableClientProductRegistrations.getColumnModel().getColumn(4).setHeaderValue("Número de producto");
        tableClientProductRegistrations.getColumnModel().getColumn(5).setHeaderValue("Fecha de expiración");
        tableClientProductRegistrations.getColumnModel().getColumn(6).setHeaderValue("Estado");

        btnRefreshData.setText("Recargar registros");
        btnRefreshData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labIdClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFindClient, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefreshData)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labIdClient)
                    .addComponent(txtIdClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindClient)
                    .addComponent(btnRefreshData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void btnFindClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindClientActionPerformed
        GUIPanelModalListClients panel = new GUIPanelModalListClients(this, this.clientController);
        modal = new JDialog(this, "Clientes", true);
        modal.getContentPane().add(panel);
        modal.pack();
        modal.setLocationRelativeTo(null);
        modal.setVisible(true);
    }//GEN-LAST:event_btnFindClientActionPerformed

    private void btnRefreshDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshDataActionPerformed
        this.loadDataProdcuts();
    }//GEN-LAST:event_btnRefreshDataActionPerformed

    public void loadDataProdcuts() {
        List<ProductRegistration> allProductRegistrations =
            this.productRegistrationController.listAllProductRegistrations();
        List<ProductRegistration> clientProductRegistrations = new ArrayList<>();

        for (ProductRegistration productRegistration : allProductRegistrations) {
            if (client.getIdentificationNumber() == productRegistration.getClientId()) {
                clientProductRegistrations.add(productRegistration);
            }
        }

        DefaultTableModel model = (DefaultTableModel) tableClientProductRegistrations.getModel();
        model.setRowCount(0);

        for (ProductRegistration clientProductRegistration : clientProductRegistrations) {
            try {
                Product product = this.productController.findProductById(clientProductRegistration.getProductCode());
                model.addRow(new Object[] {
                             clientProductRegistration.getProductCode(), product.getName(),
                             clientProductRegistration.getProductNumber(), clientProductRegistration.getBalance(),
                             String.valueOf(clientProductRegistration.getRegistratioDate()),
                             String.valueOf(clientProductRegistration.getExpirationDate()),
                             (clientProductRegistration.isState() == true ? "Activo" : "Inactivo")
                });
            } catch (Exception ex) {
                Logger.getLogger(GUIListProductRegistrationsByClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void loadModalData(String data) {
        txtIdClient.setText(data);
        modal.dispose();
        txtIdClient.setEditable(false);

        try {
            client = clientController.findClientById(data);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        this.loadDataProdcuts();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindClient;
    private javax.swing.JButton btnRefreshData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labIdClient;
    private javax.swing.JTable tableClientProductRegistrations;
    private javax.swing.JTextField txtIdClient;
    // End of variables declaration//GEN-END:variables
}
