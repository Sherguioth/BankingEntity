<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxList.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>